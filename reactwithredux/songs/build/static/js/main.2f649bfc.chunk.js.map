{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","onClick","selectSong","title","renderedSongList","React","Component","connect","state","type","payload","selectedSong","duration","App","SongDetail","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"6LAIMA,E,sKACJ,WAAoB,IAAD,OACjB,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAC3B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,wBACEC,QAAS,kBAAM,EAAKL,MAAMM,WAAWH,IACrCC,UAAU,oBAFZ,sBAOF,qBAAKA,UAAU,UAAf,SAA0BD,EAAKI,UATNJ,EAAKI,Y,oBAetC,WACE,OAAO,qBAAKH,UAAU,kBAAf,SAAkCL,KAAKS,yB,GApB3BC,IAAMC,WA6BdC,eALS,SAACC,GAEvB,MAAO,CAAEX,MAAOW,EAAMX,SAGgB,CAAEK,WChChB,SAACH,GACzB,MAAO,CACLU,KAAM,gBACNC,QAASX,KD6BEQ,CAAyCb,GEPzCa,eAJS,SAACC,GACvB,MAAO,CAAET,KAAMS,EAAMG,gBAGRJ,EAvBK,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACrB,OACE,8BACGA,EACC,gCACE,8CACA,uCACSA,EAAKI,MACZ,uBAFF,aAGaJ,EAAKa,eAIpB,mBCGOC,EAfH,WACV,OACE,qBAAKb,UAAU,oBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,oBAAf,SACE,cAACc,EAAD,YCMKC,cAAgB,CAC7BlB,MAjB0B,WAC1B,MAAO,CACL,CAAEM,MAAO,YAAaS,SAAU,QAChC,CAAET,MAAO,WAAYS,SAAU,QAC/B,CAAET,MAAO,WAAYS,SAAU,QAC/B,CAAET,MAAO,qBAAsBS,SAAU,UAa3CD,aAT0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMK,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAOP,KACFO,EAAON,QAETC,KCPTM,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.2f649bfc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from \"../actions\";\r\n\r\nclass SongList extends React.Component {\r\n  renderedSongList() {\r\n    return this.props.songs.map((song) => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n            <button\r\n              onClick={() => this.props.selectSong(song)}\r\n              className=\"ui button primary\"\r\n            >\r\n              Select\r\n            </button>\r\n          </div>\r\n          <div className=\"content\">{song.title}</div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui divided list\">{this.renderedSongList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state);\r\n  return { songs: state.songs };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);\r\n","//Action Creator\r\nexport const selectSong = (song) => {\r\n  return {\r\n    type: \"SONG_SELECTED\",\r\n    payload: song,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SongDetails = ({ song }) => {\r\n  return (\r\n    <div>\r\n      {song ? (\r\n        <div>\r\n          <h3>Details for:</h3>\r\n          <p>\r\n            Title:{song.title}\r\n            <br />\r\n            Duration: {song.duration}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        \"Pick a song\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { song: state.selectedSong };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetails);\r\n","import React from \"react\";\r\nimport SongList from \"./SongList\";\r\nimport SongDetail from \"./SongDetail\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container grid\">\r\n      <div className=\"ui row\">\r\n        <div className=\"column eight wide\">\r\n          <SongList />\r\n        </div>\r\n        <div className=\"column eight wide\">\r\n          <SongDetail />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nexport const songsReducer = () => {\r\n  return [\r\n    { title: \"No Scrubs\", duration: \"4:05\" },\r\n    { title: \"Macarena\", duration: \"2:30\" },\r\n    { title: \"All Star\", duration: \"3:15\" },\r\n    { title: \"I Want it That Way\", duration: \"1:45\" },\r\n  ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n  if (action.type === \"SONG_SELECTED\") {\r\n    return action.payload;\r\n  }\r\n  return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n  songs: songsReducer,\r\n  selectedSong: selectedSongReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}